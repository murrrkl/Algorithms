/*
 1. Номер карты состоит только из цифр от 0 до 2 и дефисов
 2. Каждый дефис стоит между цифрами - разделяя на блоки
 3. Каждый блок цифр имеет длину от 3 до 7 цифр
 4. В записи блока цифры 0 и 2 не идут два раза подряд
*/


/*
 1. Ни один блок, за исключением последнего, не может начинаться с 0
 2. В каждом блоке цифра 1 встречается не больше одного раза
 3. Длина любого блока, после первого, больше 4.
*/

/*
 1. В номере есть как миниму один блок длины 5 или 7
 2. В номере есть блок, значеник которого строго меньше 20000
 3. В номере как минимум два блока и второй с начала блок длины 6
*/
function restoreTheBankNumber(number) {
  const cardNumber = /^(?!.*00|.*22)[0-2]{3,7}(-[0-2]{3,7})*$/;
  const t_1 = /^([1-2][0-2]{3,6})(-[1-2][0-2]{4,})*(-[0-2]{5,})?$/;
  const t_2 = /^(?!.*(\d)*1(\d)*1.*)/;

  const o_1 = /^([0-2]{3,7})(-[0-2]{6})(-[0-2]{3,7})*$/;
  const o_2 = /\b\d{5}\b|\b\d{7}\b/;
  const o_3 = /(^0*[0-1]?(\d){0,4}-)|(-0*[0-1]?(\d){0,4}-)|(-0*[0-1]?(\d){0,4}$)/;

  let signs = ['-', '0', '1', '2'];

  for (let i = 0; i < signs.length; i++) {
    cur = number.replace('.', signs[i]);
    if (cardNumber.test(cur)) {
      if (t_1.test(cur) && t_2.test(cur)) {
        return cur;
      }
      if (o_1.test(cur) && o_2.test(cur) && o_3.test(cur)) {
        return cur;
      }
    }
  }
}

module.exports = restoreTheBankNumber;

// Пример использования
const restoreTheBank = require('./index.js');

console.log(restoreTheBank('111111-011111-2.02102')); // '111111-011111-2102102'
console.log("--------");
console.log(restoreTheBank('111111.011111-2102102')); // '111111-011111-2102102'
console.log("--------");
console.log(restoreTheBank('111111-.11111-2102102')); // '111111-011111-2102102'